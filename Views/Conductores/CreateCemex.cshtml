@model SoteloProjectFramework.Models.ModeloExtendidoChofer

@{
	ViewBag.Title = "Crear Chofer";
	Layout = "~/Views/Shared/_LayoutAdmin.cshtml";
}

<h2>Crear chofer</h2>

@using (Html.BeginForm())
{
	@Html.AntiForgeryToken()

<div class="form-horizontal">
	<h4>Registre al nuevo chofer</h4>
	<hr />
	@Html.ValidationSummary(true, "", new { @class = "text-danger" })
	<div class="form-group">
		<div class="col-md-10">
			<label>Foto</label><br />
			@Html.HiddenFor(model => model.Chofer.FotoBase64, new { htmlAttributes = new { @class = "form-control" } })
			<img src="#" alt="No se ha cargado ninguna imagen" id="FotoBase64" width="50em" height="50em"/><br />
			<input type="file" name="foto" id="foto" value="" />
		</div>
	</div>
	<div class="form-group">
		@Html.LabelFor(model => model.Chofer.Nombres, htmlAttributes: new { @class = "control-label col-md-2" })
		<div class="col-md-10">
			@Html.EditorFor(model => model.Chofer.Nombres, new { htmlAttributes = new { @class = "form-control" } })
			@Html.ValidationMessageFor(model => model.Chofer.Nombres, "", new { @class = "text-danger" })
		</div>
	</div>
	<div class="form-group">
		@Html.LabelFor(model => model.Chofer.PrimerApellido, htmlAttributes: new { @class = "control-label col-md-2" })
		<div class="col-md-10">
			@Html.EditorFor(model => model.Chofer.PrimerApellido, new { htmlAttributes = new { @class = "form-control" } })
			@Html.ValidationMessageFor(model => model.Chofer.PrimerApellido, "", new { @class = "text-danger" })
		</div>
	</div>
	<div class="form-group">
		@Html.LabelFor(model => model.Chofer.SegundoApellido, htmlAttributes: new { @class = "control-label col-md-2" })
		<div class="col-md-10">
			@Html.EditorFor(model => model.Chofer.SegundoApellido, new { htmlAttributes = new { @class = "form-control" } })
			@Html.ValidationMessageFor(model => model.Chofer.SegundoApellido, "", new { @class = "text-danger" })
		</div>
	</div>
	<div class="form-group">
		@Html.LabelFor(model => model.DetalleChofer.Edad, htmlAttributes: new { @class = "control-label col-md-2" })
		<div class="col-md-10">
			@Html.EditorFor(model => model.DetalleChofer.Edad, new { htmlAttributes = new { @class = "form-control" } })
			@Html.ValidationMessageFor(model => model.DetalleChofer.Edad, "", new { @class = "text-danger" })
		</div>
	</div>
	<div class="form-group">
		@Html.LabelFor(model => model.DetalleChofer.FechaNacimiento, htmlAttributes: new { @class = "control-label col-md-2" })
		<div class="col-md-10">
			@Html.EditorFor(model => model.DetalleChofer.FechaNacimiento, new { htmlAttributes = new { @class = "form-control", type = "date" } })
			@Html.ValidationMessageFor(model => model.DetalleChofer.FechaNacimiento, "", new { @class = "text-danger" })
		</div>
	</div>
	<div class="form-group">
		@Html.LabelFor(model => model.DetalleChofer.LicenciaConducir, htmlAttributes: new { @class = "control-label col-md-2" })
		<div class="col-md-10">
			@Html.EditorFor(model => model.DetalleChofer.LicenciaConducir, new { htmlAttributes = new { @class = "form-control" } })
			@Html.ValidationMessageFor(model => model.DetalleChofer.LicenciaConducir, "", new { @class = "text-danger" })
		</div>
	</div>
	<div class="form-group">
		@Html.LabelFor(model => model.DetalleChofer.NSS, htmlAttributes: new { @class = "control-label col-md-2" })
		<div class="col-md-10">
			@Html.EditorFor(model => model.DetalleChofer.NSS, new { htmlAttributes = new { @class = "form-control" } })
			@Html.ValidationMessageFor(model => model.DetalleChofer.NSS, "", new { @class = "text-danger" })
		</div>
	</div>
	<div class="form-group">
		@Html.LabelFor(model => model.DetalleChofer.Unidad, htmlAttributes: new { @class = "control-label col-md-2" })
		<div class="col-md-10">
			@Html.EditorFor(model => model.DetalleChofer.Unidad, new { htmlAttributes = new { @class = "form-control" } })
			@Html.ValidationMessageFor(model => model.DetalleChofer.Unidad, "", new { @class = "text-danger" })
		</div>
	</div>
	<div class="form-group">
		@Html.LabelFor(model => model.DetalleChofer.PlacasUnidad, htmlAttributes: new { @class = "control-label col-md-2" })
		<div class="col-md-10">
			@Html.EditorFor(model => model.DetalleChofer.PlacasUnidad, new { htmlAttributes = new { @class = "form-control" } })
			@Html.ValidationMessageFor(model => model.DetalleChofer.PlacasUnidad, "", new { @class = "text-danger" })
		</div>
	</div>
	<div class="form-group">
		@Html.LabelFor(model => model.DetalleChofer.DescripcionUnidad, htmlAttributes: new { @class = "control-label col-md-2" })
		<div class="col-md-10">
			@Html.EditorFor(model => model.DetalleChofer.DescripcionUnidad, new { htmlAttributes = new { @class = "form-control" } })
			@Html.ValidationMessageFor(model => model.DetalleChofer.DescripcionUnidad, "", new { @class = "text-danger" })
		</div>
	</div>
	<div class="form-group">
		<div class="col-md-offset-2 col-md-10">
			<button type="submit" class="btn btn-success"><i class="fa fa-save"></i> Guardar</button>
		</div>
	</div>
</div>
}
@section scripts{
	<script>
		function getBase64(file) {
			return new Promise((resolve, reject) => {
				const reader = new FileReader();
				reader.readAsDataURL(file);
				reader.onload = () => resolve(reader.result);
				reader.onerror = error => reject(error);
			});
		}
		$(document).ready(function () {
			$('#foto').on('change', function () {
				let file = $(this)[0].files[0]
				getBase64(file).then(data => {
					$('#Chofer_FotoBase64').val(data)
					$('#FotoBase64').attr('src', data)
				})
			})
		})
	</script>
}
@*<div>
		@Html.ActionLink("Back to List", "Index")
	</div>*@
